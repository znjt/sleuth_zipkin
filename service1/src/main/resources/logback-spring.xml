<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">
    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <property name="LOG_HOME" value="/logs/service1"/>
    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread][%X{X-B3-TraceId:-},%X{X-B3-SpanId:-}] %-5level %logger{50} -
                %msg%n
            </pattern>
        </encoder>
    </appender>

    <!-- 打印sql语句，name的值为你的mapper(DAO)的包名 -->
    <logger name="com.cmc.mq.biz.mapper" level="DEBUG"/>

    <!-- 按照每天生成日志文件 ，可以根据日志级别设置不同的文件，如info.log,error.log-->
    <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/%d{yyyy-MM-dd}.log</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，TraceId和SpanId，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] [%X{X-B3-TraceId:-},%X{X-B3-SpanId:-}] %-5level %logger{50} -
                %msg%n
            </pattern>
        </encoder>
        <!--日志文件最大的大小-->
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>100MB</MaxFileSize>
        </triggeringPolicy>
        <!-- 此日志文档只记录INFO级别的-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>


    <!-- 按照每天生成日志文件 ，可以根据日志级别设置不同的文件，如info.log,error.log-->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/%d{yyyy-MM-dd}_error.log</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，TraceId和SpanId，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] [%X{X-B3-TraceId:-},%X{X-B3-SpanId:-}] %-5level %logger{50} -
                %msg%n
            </pattern>
        </encoder>
        <!--日志文件最大的大小-->
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>100MB</MaxFileSize>
        </triggeringPolicy>
        <!-- 此日志文档只记录ERROR级别的-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>


    <!--默认日志输出级别,环境变量active设置与否，这里都会输出-->
    <root level="INFO">
        <appender-ref ref="STDOUT"/>
        <!--关联的是<appender标签的name属性，name属性可根据日志级别来区分，如INFO_FILE;ERROR_FILE-->
        <appender-ref ref="ERROR_FILE"/>
        <appender-ref ref="INFO_FILE"/>
    </root>

    <!--不同环境对应输出级别关联的日志文件设置-->
    <springProfile name="dev,test">
        <logger name="com.xxx.app" level="DEBUG" additivity="false">
            <appender-ref ref="INFO_FILE"/>
            <appender-ref ref="ERROR_FILE"/>
            <appender-ref ref="STDOUT"/>
        </logger>
        <!--这里的root包含了外层的root，比如test环境我可以在内层root里加上阿里云的日志采集的appender-ref，dev环境则不加-->
        <root level="DEBUG">
            <appender-ref ref="STDOUT"/>
            <!--关联的是<appender标签的name属性，name属性可根据日志级别来区分，如INFO_FILE;ERROR_FILE-->
            <appender-ref ref="ERROR_FILE"/>
            <appender-ref ref="INFO_FILE"/>
        </root>
    </springProfile>

    <springProfile name="prod">
        <logger name="com.xxx.app" level="INFO" additivity="false">
            <appender-ref ref="INFO_FILE"/>
            <appender-ref ref="ERROR_FILE"/>
            <appender-ref ref="STDOUT"/>
        </logger>
    </springProfile>
</configuration>